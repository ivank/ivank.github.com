<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: jam | Develop Simply]]></title>
  <link href="http://ivank.github.com/blog/categories/jam/atom.xml" rel="self"/>
  <link href="http://ivank.github.com/"/>
  <updated>2012-10-26T15:49:44+03:00</updated>
  <id>http://ivank.github.com/</id>
  <author>
    <name><![CDATA[Ivan Kerin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[New open source libraries]]></title>
    <link href="http://ivank.github.com/blog/2012/10/new-opensoure-libraries/"/>
    <updated>2012-10-26T14:55:00+03:00</updated>
    <id>http://ivank.github.com/blog/2012/10/new-opensoure-libraries</id>
    <content type="html"><![CDATA[<p>I've always been a believer that in order to write first class code, one has to write it as if they will be released in the wild - with all the consistency, documentation and general bad-ass-ness that it requires. And that's the test I generally use to find out if I've written a mess - "Can I release this in the wild with my name attached to it". Well if the answer is "yes" and I will not have the urge to hide in a dark corner whenever I see someone else using it, then what the hell, why not actually release it.</p>

<p>So to put my money where my mouth is, here are the libraries that I've decided to release open source. They are all Kohana 3.2 modules for now, with the ambition to upgrade them to 3.3 in the near future.</p>

<ul>
<li><a href="https://github.com/OpenBuildings/jam">Jam</a> - ORM replacement module, inspired by Kohana Jelly</li>
<li><a href="https://github.com/OpenBuildings/jam-auth">Jam Auth</a> - user authentication and permissions with Jam, as well as external service login support (e.g. facebook)</li>
<li><a href="https://github.com/OpenBuildings/services-manager">Services Manager</a> - A library to encapsulate talking to external services, with different configs for different environments</li>
<li><a href="https://github.com/OpenBuildings/functest">FuncTest</a> - Functional Testing, inspired by ruby's Capybara, with selenium and native drivers</li>
<li><a href="https://github.com/OpenBuildings/jamaker">Jamaker</a> - A Database population tool, inspired by Factory Girl</li>
</ul>


<p>These are all great tools that we use daily in production and have a lot of documentation and examples in their respective README's, I'll be really happy to get some feedback on these.</p>

<p>Also, some of the previously released libraries have been updated</p>

<ul>
<li><a href="https://github.com/OpenBuildings/timestamped-migrations">Timestamped Migrations</a> - moved to kohana minion, more options, docs and consistency throughout.</li>
<li><a href="https://github.com/OpenBuildings/asset-merger">Assets Merger</a> - added automatic tests to make sure the processors work.</li>
</ul>


<p>I'll try to present each one of these libraries on its own in future posts, but for now you can check out the docs of the libraries themselves.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jamming to the future]]></title>
    <link href="http://ivank.github.com/blog/2012/10/jamming-to-the-future/"/>
    <updated>2012-10-26T12:55:00+03:00</updated>
    <id>http://ivank.github.com/blog/2012/10/jamming-to-the-future</id>
    <content type="html"><![CDATA[<p>It's been a long time since my last publication, but I've not been gone to a deserted island or anything, just working quietly in the shadows. And I think I am at last ready to come out and introduce what I and the Clippings team have been working on for so long. But first a very quick history tour.</p>

<p>The Kohana framework is really great most of the time - great request handling, caching, module management, database query building etc., where I find it somewhat lacking (and I mean like What-the-hell-guys-put-your-shit-together type) - is the ORM. Yes it works for most of the basic use cases but its only a very thin layer over the Database builder. By the time we started the project there was <a href="http://jelly.jonathan-geiger.com/">Jelly</a> - a really inspired little ORM that promised a lot and did it with very little clean and concise code. I immoderately fell in love and started using it instead the built in ORM - and it was working great, up until the point I realized that it was a "dead" project and nobody actually added new stuff to it. No problem - I like to extend things - so little by little small pieces of code were added to the project by us and at one point I just decided - this is not Jelly anymore! And so we now have a new feature rich library for handling database persistence - <a href="https://github.com/OpenBuildings/jam">Jam</a>.</p>

<p>While the Jam library is a spiritual successor of Jelly, the internals are quite different because of the loads of bundled up functionality that had to be added. Because it was developed over time over the Jelly code base, some of its design don't fit particularly well and will probably be replaced by a more consistent interface in the near future. And I had to remove the eager loading functionality (load_with()), which in my tests performed worse than simply loading all the models anyway, however, you gain quite a lot in return - stuff like:</p>

<ul>
<li>Lazy loading of collections - the query is executed at the last possible moment so you can easily cache it in your views.</li>
<li>Build in validation in the model, Active record style - no more unhanded exceptions and weird error message file locations, and validation rules are handled much more developer friendly</li>
<li>Polymorphism - polymorphic 'belongs to' and 'has many'</li>
<li>Uploading files to different back ends transparently (local, Rackspace, FTP), and by different means (Ajax uploads, URLs)</li>
<li>Built in behaviors - Paranoid, Sluggable, Nested, Sortable, Uploadable</li>
<li>HTML Form builder with automatic errors integration and nested associations</li>
</ul>


<p>And these are just off the top of my head - there are many many small additions and fixes, and most importantly tons of documentation for the existing functionality.</p>

<p>So take a look at <a href="https://github.com/OpenBuildings/jam">Jam</a> (and the corresponding <a href="https://github.com/OpenBuildings/jam-auth">Jam Auth</a>) and tell me what you think.</p>

<hr />

<p>P.S. Kudos to Jonathan Geiger and all of the maintainers of the jelly project - it really is a great inspiration. I tried to hold the spirit of jelly true, but with all the new functionality that had to be added I sort of abandoned the idea of "keeping it really small" and went with "add a lot of useful features" approach.</p>
]]></content>
  </entry>
  
</feed>
